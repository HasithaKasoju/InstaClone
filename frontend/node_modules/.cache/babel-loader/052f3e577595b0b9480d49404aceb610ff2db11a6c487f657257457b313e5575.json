{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ha\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import profile from '../img/profile.jpg';\n// import './Home.css';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faXmark } from '@fortawesome/free-solid-svg-icons';\n// import UserProfile from './UserProfile';\n// export default function Home() {\n//   const navigate = useNavigate();\n//   const [data, setData] = useState([]);\n//   const [comment,setComment]=useState(\"\");\n//   const [show,setShow]=useState(false);\n//   const [item,setItem]=useState([]);\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (!token) {\n//       navigate('/SignUp');\n//     } else {\n//       fetch(\"http://localhost:5000/allposts\", {\n//         headers: {\n//           \"Authorization\": \"Bearer \" + token\n//         },\n//       })\n//       .then(res => res.json())\n//       .then(result => {\n//         setData(result);\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//     }\n//   }, [navigate]);\n\n//    const toogleComment=(posts)=>\n//    {\n//     if(show)\n//     {\n//    setShow(false)\n//     }\n//     else{\n//       setShow(true)\n//       setItem(posts);\n//     }\n//   }\n//   const toggleLike = (postId) => {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (!token) {\n//       navigate('/SignUp');\n//     } else {\n//       const post = data.find(p => p._id === postId);\n//       const isLiked = post.likes.includes(postId);\n//       const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\n\n//       const updatedData = data.map(post => {\n//         if (post._id === postId) {\n//           return { ...post, likes: updatedLikes };\n//         }\n//         return post;\n//       });\n//       setData(updatedData);\n\n//       const emojiElement = document.getElementById(`emoji-${postId}`);\n//       emojiElement.style.color = isLiked ? 'black' : 'red'; // Change color based on like status\n\n//       const endpoint = isLiked ? 'unlike' : 'like';\n//       fetch(`http://localhost:5000/${endpoint}`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"Authorization\": \"Bearer \" + token\n//         },\n//         body: JSON.stringify({\n//           postId: postId\n//         })\n//       })\n//       .then(res => {\n//         if (!res.ok) {\n//           throw new Error('Network response was not ok ' + res.statusText);\n//         }\n//         // Optionally, update the UI here\n//       })\n//       .catch(error => {\n//         console.error('There has been a problem with your fetch operation:', error);\n//       });\n//     }\n//   };\n\n//   const makeComment =(text,id)=>\n//   {\n//     fetch(\"http://localhost:5000/Comment\", {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n//       },\n//       body: JSON.stringify({\n//         text: text,\n//         postId: id,\n//       }),\n//     })\n//     .then((res) => res.json())\n//       .then((result) => {\n//         const newData = data.map((posts) => {\n//           if (posts._id === result._id) {\n//             return {\n//               ...posts,\n//             comments:result.comments\n//                     };\n//           } else {\n//             return posts;\n//           }\n//         });\n//         setData(newData);\n//         setComment(\"\");\n//         alert(\"posoted comment\");\n//         console.log(result);\n\n//       });\n//   }\n\n//   return (\n//     <div className=\"home\">\n//       {data.map(post => (\n//         <div className=\"card\" key={post._id}>\n//           <div className=\"card-header\">\n//             <div className=\"card-pic\">\n//               <img src={profile} alt=\"Profile\" />\n//             </div>\n//             <h5>\n//               <Link to ={`../Profile/${post.postedBy._id}`}>\n//               {post.postedBy ? post.postedBy.name : \"Unknown User\"}</Link></h5>\n//           </div>\n//           <div className=\"card-image\">\n//           <img \n//   src={post.photo} \n//   onClick={() => {\n//     console.log(\"user of the post:\", post.postedBy._id);\n\n//   }} \n//   alt=\"Post\" \n// />\n//             <div className=\"card-content\">\n//               <span\n//                 className={`material-symbols-outlined ${post.likes.includes(post._id) ? 'liked' : ''}`}\n//                 onClick={() => toggleLike(post._id)}\n//               >\n//                 <span id={`emoji-${post._id}`} style={{ color: post.likes.includes(post._id) ? 'red' : 'black' }}>\n//                   {post.likes.includes(post._id) ? '‚ù§Ô∏è' : 'üñ§'}\n//                 </span>\n//               </span>\n//               <p>{post.likes.length} likes</p>\n//               <p>{post.body}</p>\n//               <p\n//                 style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n\n//               >\n//             <p style={{fontWeight:\"bold\",cursor:\"pointer\"}}onClick={()=>{toogleComment(post);}} on> View all comments</p> \n//               </p>\n//             </div>\n//           </div>\n//           <div className=\"add-comment\">\n//             <span className=\"material-symbols-outlined\">mood</span>\n//             <input type=\"text\" placeholder='Add a comment' value={comment}\n//                 onChange={(e) => {\n//                   setComment(e.target.value);\n//                 }} />\n//             <button className=\"comment\"    onClick={() => {\n//                   makeComment(comment, post._id);\n//                 }}>Post</button>\n//           </div>\n//         </div>\n//       ))}\n//       {\n\n//       show &&\n//       (<div className=\"showComment\">\n//           <div className=\"container\">\n//             <div className=\"postPic\">\n//               <img src={item.photo}  alt=\"\" />\n//             </div>\n//             <div className=\"details\">\n//               {/* card header */}\n//               <div\n//                 className=\"card-header\"\n//                 style={{ borderBottom: \"1px solid #00000029\" }}\n//               >\n//                 <div className=\"card-pic\">\n//                   <img\n//                     src={profile}  //here comes the image\n//                     alt=\"hello\"\n//                   />\n//                 </div>\n//                 <h5>{item.postedBy.name}</h5>\n//               </div>\n\n//               {/* commentSection */}\n//               <div\n//                 className=\"comment-section\"\n//                 style={{ borderBottom: \"1px solid #00000029\" }}\n//               >\n//                  {item.comments.map((it)=>\n//                  {\n//                    return ( <p className=\"comm\">\n//                    <span\n//                      className=\"commenter\"\n//                      style={{ fontWeight: \"bolder\" }}\n//                    >\n//                    <p>{it.postedBy.name}</p>\n//                    </span>\n//                    <span className=\"commentText\">{it.comment}</span>\n//                  </p>)\n//                  })}\n\n//               </div>\n\n//               {/* card content */}\n//               <div className=\"card-content\">\n//                 <p>{item.likes.length} Likes</p>\n//                 <p>{item.body}</p>\n//               </div>\n\n//               {/* add Comment */}\n//               <div className=\"add-comment\">\n//                 <span className=\"material-symbols-outlined\">mood</span>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Add a comment\"\n//                   value={comment}\n//                   onChange={(e) => {\n//                     setComment(e.target.value);\n//                   }}\n//                 />\n//                 <button\n//                   className=\"comment\"\n//                   onClick={() => {\n//                     makeComment(comment, item._id);\n//                     toogleComment();\n//                   }}\n//                 >\n//                   Post\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"close-comment\" onClick={()=>{toogleComment();}}>\n//           <FontAwesomeIcon icon={faXmark} />\n//           </div>\n//      </div>)\n//         } \n\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from 'react';\nimport profile from '../img/profile.jpg';\nimport './Home.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport UserProfile from './UserProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate('/SignUp');\n    } else {\n      fetch(\"http://localhost:5000/allposts\", {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(result => {\n        setData(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [navigate]);\n  const toggleComment = posts => {\n    setShow(!show);\n    setItem(posts);\n  };\n  const toggleLike = postId => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate('/SignUp');\n    } else {\n      const post = data.find(p => p._id === postId);\n      const isLiked = post.likes.includes(postId);\n      const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\n      const updatedData = data.map(post => {\n        if (post._id === postId) {\n          return {\n            ...post,\n            likes: updatedLikes\n          };\n        }\n        return post;\n      });\n      setData(updatedData);\n      const endpoint = isLiked ? 'unlike' : 'like';\n      fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token\n        },\n        body: JSON.stringify({\n          postId: postId\n        })\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok ' + res.statusText);\n        }\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n      });\n    }\n  };\n  const makeComment = (text, id) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        text: text,\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(posts => {\n        if (posts._id === result._id) {\n          return {\n            ...posts,\n            comments: result.comments\n          };\n        } else {\n          return posts;\n        }\n      });\n      setData(newData);\n      setComment(\"\");\n      alert(\"Posted comment\");\n      console.log(result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${post.postedBy._id}`,\n            children: post.postedBy ? post.postedBy.name : \"Unknown User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.photo,\n          onClick: () => console.log(\"user of the post:\", post.postedBy._id),\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `material-symbols-outlined ${post.likes.includes(localStorage.getItem(\"userId\")) ? 'liked' : ''}`,\n          onClick: () => toggleLike(post._id),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: `emoji-${post._id}`,\n            style: {\n              color: post.likes.includes(localStorage.getItem(\"userId\")) ? 'red' : 'black'\n            },\n            children: post.likes.includes(localStorage.getItem(\"userId\")) ? '‚ù§Ô∏è' : 'üñ§'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [post.likes.length, \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          onClick: () => toggleComment(post),\n          children: \"View all comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment\",\n          onClick: () => makeComment(comment, post._id),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this)), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postPic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            style: {\n              borderBottom: \"1px solid #00000029\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: profile,\n                alt: \"hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: item.postedBy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            style: {\n              borderBottom: \"1px solid #00000029\"\n            },\n            children: item.comments.map(it => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"commenter\",\n                style: {\n                  fontWeight: \"bolder\"\n                },\n                children: it.postedBy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"commentText\",\n                children: it.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this)]\n            }, it._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              children: \"mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comment\",\n              onClick: () => {\n                makeComment(comment, item._id);\n                toggleComment();\n              },\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-comment\",\n        onClick: toggleComment,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faXmark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"qOpFm6vvCz6vzxLgOHZFRZAPXyU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","profile","Link","useNavigate","FontAwesomeIcon","faXmark","UserProfile","jsxDEV","_jsxDEV","Home","_s","navigate","data","setData","comment","setComment","show","setShow","item","setItem","token","localStorage","getItem","fetch","headers","then","res","json","result","catch","err","console","log","toggleComment","posts","toggleLike","postId","post","find","p","_id","isLiked","likes","includes","updatedLikes","filter","id","updatedData","map","endpoint","method","body","JSON","stringify","ok","Error","statusText","error","makeComment","text","newData","comments","alert","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","postedBy","name","photo","onClick","style","color","length","fontWeight","cursor","type","placeholder","value","onChange","e","target","borderBottom","it","icon","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/ha/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import profile from '../img/profile.jpg';\r\n// import './Home.css';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faXmark } from '@fortawesome/free-solid-svg-icons';\r\n// import UserProfile from './UserProfile';\r\n// export default function Home() {\r\n//   const navigate = useNavigate();\r\n//   const [data, setData] = useState([]);\r\n//   const [comment,setComment]=useState(\"\");\r\n//   const [show,setShow]=useState(false);\r\n//   const [item,setItem]=useState([]);\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"jwt\");\r\n//     if (!token) {\r\n//       navigate('/SignUp');\r\n//     } else {\r\n//       fetch(\"http://localhost:5000/allposts\", {\r\n//         headers: {\r\n//           \"Authorization\": \"Bearer \" + token\r\n//         },\r\n//       })\r\n//       .then(res => res.json())\r\n//       .then(result => {\r\n//         setData(result);\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//       });\r\n//     }\r\n//   }, [navigate]);\r\n\r\n\r\n//    const toogleComment=(posts)=>\r\n//    {\r\n//     if(show)\r\n//     {\r\n//    setShow(false)\r\n//     }\r\n//     else{\r\n//       setShow(true)\r\n//       setItem(posts);\r\n//     }\r\n//   }\r\n//   const toggleLike = (postId) => {\r\n//     const token = localStorage.getItem(\"jwt\");\r\n//     if (!token) {\r\n//       navigate('/SignUp');\r\n//     } else {\r\n//       const post = data.find(p => p._id === postId);\r\n//       const isLiked = post.likes.includes(postId);\r\n//       const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\r\n\r\n//       const updatedData = data.map(post => {\r\n//         if (post._id === postId) {\r\n//           return { ...post, likes: updatedLikes };\r\n//         }\r\n//         return post;\r\n//       });\r\n//       setData(updatedData);\r\n\r\n//       const emojiElement = document.getElementById(`emoji-${postId}`);\r\n//       emojiElement.style.color = isLiked ? 'black' : 'red'; // Change color based on like status\r\n\r\n//       const endpoint = isLiked ? 'unlike' : 'like';\r\n//       fetch(`http://localhost:5000/${endpoint}`, {\r\n//         method: \"PUT\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           \"Authorization\": \"Bearer \" + token\r\n//         },\r\n//         body: JSON.stringify({\r\n//           postId: postId\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (!res.ok) {\r\n//           throw new Error('Network response was not ok ' + res.statusText);\r\n//         }\r\n//         // Optionally, update the UI here\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('There has been a problem with your fetch operation:', error);\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const makeComment =(text,id)=>\r\n//   {\r\n//     fetch(\"http://localhost:5000/Comment\", {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n//       },\r\n//       body: JSON.stringify({\r\n//         text: text,\r\n//         postId: id,\r\n//       }),\r\n//     })\r\n//     .then((res) => res.json())\r\n//       .then((result) => {\r\n//         const newData = data.map((posts) => {\r\n//           if (posts._id === result._id) {\r\n//             return {\r\n//               ...posts,\r\n//             comments:result.comments\r\n//                     };\r\n//           } else {\r\n//             return posts;\r\n//           }\r\n//         });\r\n//         setData(newData);\r\n//         setComment(\"\");\r\n//         alert(\"posoted comment\");\r\n//         console.log(result);\r\n\r\n\r\n//       });\r\n//   }\r\n  \r\n  \r\n//   return (\r\n//     <div className=\"home\">\r\n//       {data.map(post => (\r\n//         <div className=\"card\" key={post._id}>\r\n//           <div className=\"card-header\">\r\n//             <div className=\"card-pic\">\r\n//               <img src={profile} alt=\"Profile\" />\r\n//             </div>\r\n//             <h5>\r\n//               <Link to ={`../Profile/${post.postedBy._id}`}>\r\n//               {post.postedBy ? post.postedBy.name : \"Unknown User\"}</Link></h5>\r\n//           </div>\r\n//           <div className=\"card-image\">\r\n//           <img \r\n//   src={post.photo} \r\n//   onClick={() => {\r\n//     console.log(\"user of the post:\", post.postedBy._id);\r\n   \r\n//   }} \r\n//   alt=\"Post\" \r\n// />\r\n//             <div className=\"card-content\">\r\n//               <span\r\n//                 className={`material-symbols-outlined ${post.likes.includes(post._id) ? 'liked' : ''}`}\r\n//                 onClick={() => toggleLike(post._id)}\r\n//               >\r\n//                 <span id={`emoji-${post._id}`} style={{ color: post.likes.includes(post._id) ? 'red' : 'black' }}>\r\n//                   {post.likes.includes(post._id) ? '‚ù§Ô∏è' : 'üñ§'}\r\n//                 </span>\r\n//               </span>\r\n//               <p>{post.likes.length} likes</p>\r\n//               <p>{post.body}</p>\r\n//               <p\r\n//                 style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                \r\n//               >\r\n//             <p style={{fontWeight:\"bold\",cursor:\"pointer\"}}onClick={()=>{toogleComment(post);}} on> View all comments</p> \r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"add-comment\">\r\n//             <span className=\"material-symbols-outlined\">mood</span>\r\n//             <input type=\"text\" placeholder='Add a comment' value={comment}\r\n//                 onChange={(e) => {\r\n//                   setComment(e.target.value);\r\n//                 }} />\r\n//             <button className=\"comment\"    onClick={() => {\r\n//                   makeComment(comment, post._id);\r\n//                 }}>Post</button>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//       {\r\n\r\n//       show &&\r\n//       (<div className=\"showComment\">\r\n//           <div className=\"container\">\r\n//             <div className=\"postPic\">\r\n//               <img src={item.photo}  alt=\"\" />\r\n//             </div>\r\n//             <div className=\"details\">\r\n//               {/* card header */}\r\n//               <div\r\n//                 className=\"card-header\"\r\n//                 style={{ borderBottom: \"1px solid #00000029\" }}\r\n//               >\r\n//                 <div className=\"card-pic\">\r\n//                   <img\r\n//                     src={profile}  //here comes the image\r\n//                     alt=\"hello\"\r\n//                   />\r\n//                 </div>\r\n//                 <h5>{item.postedBy.name}</h5>\r\n//               </div>\r\n\r\n//               {/* commentSection */}\r\n//               <div\r\n//                 className=\"comment-section\"\r\n//                 style={{ borderBottom: \"1px solid #00000029\" }}\r\n//               >\r\n//                  {item.comments.map((it)=>\r\n//                  {\r\n//                    return ( <p className=\"comm\">\r\n//                    <span\r\n//                      className=\"commenter\"\r\n//                      style={{ fontWeight: \"bolder\" }}\r\n//                    >\r\n//                    <p>{it.postedBy.name}</p>\r\n//                    </span>\r\n//                    <span className=\"commentText\">{it.comment}</span>\r\n//                  </p>)\r\n//                  })}\r\n                   \r\n                  \r\n                \r\n//               </div>\r\n\r\n//               {/* card content */}\r\n//               <div className=\"card-content\">\r\n//                 <p>{item.likes.length} Likes</p>\r\n//                 <p>{item.body}</p>\r\n//               </div>\r\n\r\n//               {/* add Comment */}\r\n//               <div className=\"add-comment\">\r\n//                 <span className=\"material-symbols-outlined\">mood</span>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Add a comment\"\r\n//                   value={comment}\r\n//                   onChange={(e) => {\r\n//                     setComment(e.target.value);\r\n//                   }}\r\n//                 />\r\n//                 <button\r\n//                   className=\"comment\"\r\n//                   onClick={() => {\r\n//                     makeComment(comment, item._id);\r\n//                     toogleComment();\r\n//                   }}\r\n//                 >\r\n//                   Post\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"close-comment\" onClick={()=>{toogleComment();}}>\r\n//           <FontAwesomeIcon icon={faXmark} />\r\n//           </div>\r\n//      </div>)\r\n//         } \r\n        \r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useEffect, useState } from 'react';\r\nimport profile from '../img/profile.jpg';\r\nimport './Home.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport UserProfile from './UserProfile';\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate('/SignUp');\r\n    } else {\r\n      fetch(\"http://localhost:5000/allposts\", {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        },\r\n      })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setData(result);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const toggleComment = (posts) => {\r\n    setShow(!show);\r\n    setItem(posts);\r\n  };\r\n\r\n  const toggleLike = (postId) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate('/SignUp');\r\n    } else {\r\n      const post = data.find(p => p._id === postId);\r\n      const isLiked = post.likes.includes(postId);\r\n      const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\r\n\r\n      const updatedData = data.map(post => {\r\n        if (post._id === postId) {\r\n          return { ...post, likes: updatedLikes };\r\n        }\r\n        return post;\r\n      });\r\n      setData(updatedData);\r\n\r\n      const endpoint = isLiked ? 'unlike' : 'like';\r\n      fetch(`http://localhost:5000/${endpoint}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer \" + token\r\n        },\r\n        body: JSON.stringify({\r\n          postId: postId\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error('Network response was not ok ' + res.statusText);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const makeComment = (text, id) => {\r\n    fetch(\"http://localhost:5000/comment\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n        postId: id,\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id === result._id) {\r\n            return {\r\n              ...posts,\r\n              comments: result.comments\r\n            };\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        setComment(\"\");\r\n        alert(\"Posted comment\");\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map(post => (\r\n        <div className=\"card\" key={post._id}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-pic\">\r\n              <img src={profile} alt=\"Profile\" />\r\n            </div>\r\n            <h5>\r\n              <Link to={`/profile/${post.postedBy._id}`}>\r\n                {post.postedBy ? post.postedBy.name : \"Unknown User\"}\r\n              </Link>\r\n            </h5>\r\n          </div>\r\n          <div className=\"card-image\">\r\n            <img \r\n              src={post.photo} \r\n              onClick={() => console.log(\"user of the post:\", post.postedBy._id)} \r\n              alt=\"Post\" \r\n            />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <span\r\n              className={`material-symbols-outlined ${post.likes.includes(localStorage.getItem(\"userId\")) ? 'liked' : ''}`}\r\n              onClick={() => toggleLike(post._id)}\r\n            >\r\n              <span id={`emoji-${post._id}`} style={{ color: post.likes.includes(localStorage.getItem(\"userId\")) ? 'red' : 'black' }}>\r\n                {post.likes.includes(localStorage.getItem(\"userId\")) ? '‚ù§Ô∏è' : 'üñ§'}\r\n              </span>\r\n            </span>\r\n            <p>{post.likes.length} likes</p>\r\n            <p>{post.body}</p>\r\n            <p\r\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n              onClick={() => toggleComment(post)}\r\n            >\r\n              View all comments\r\n            </p>\r\n          </div>\r\n          <div className=\"add-comment\">\r\n            <span className=\"material-symbols-outlined\">mood</span>\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Add a comment\" \r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n            <button \r\n              className=\"comment\" \r\n              onClick={() => makeComment(comment, post._id)}\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {show && (\r\n        <div className=\"showComment\">\r\n          <div className=\"container\">\r\n            <div className=\"postPic\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\r\n                <div className=\"card-pic\">\r\n                  <img src={profile} alt=\"hello\" />\r\n                </div>\r\n                <h5>{item.postedBy.name}</h5>\r\n              </div>\r\n              <div className=\"comment-section\" style={{ borderBottom: \"1px solid #00000029\" }}>\r\n                {item.comments.map(it => (\r\n                  <p className=\"comm\" key={it._id}>\r\n                    <span className=\"commenter\" style={{ fontWeight: \"bolder\" }}>\r\n                      {it.postedBy.name}\r\n                    </span>\r\n                    <span className=\"commentText\">{it.comment}</span>\r\n                  </p>\r\n                ))}\r\n              </div>\r\n              <div className=\"card-content\">\r\n                <p>{item.likes.length} Likes</p>\r\n                <p>{item.body}</p>\r\n              </div>\r\n              <div className=\"add-comment\">\r\n                <span className=\"material-symbols-outlined\">mood</span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  value={comment}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                />\r\n                <button\r\n                  className=\"comment\"\r\n                  onClick={() => {\r\n                    makeComment(comment, item._id);\r\n                    toggleComment();\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"close-comment\" onClick={toggleComment}>\r\n            <FontAwesomeIcon icon={faXmark} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}