{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ha\\\\frontend\\\\src\\\\components\\\\UserProfile.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import profile from '../img/profile.jpg';\n// // import \"./Profile.css\";\n// // import { useNavigate } from 'react-router-dom';\n// // import Postdetails from './Postdetails';\n// // import { useParams } from 'react-router-dom';\n// // export default function UserProfile() {\n// //   const [data, setData] = useState([]);\n// //   const {userid}=useParams();\n// //   const [user,setUser]=useState(\"\");\n// //   const [posts, setPosts] = useState([]);\n// //   const navigate = useNavigate();\n\n// //   const notifyB = (message) => alert(message);\n\n// //  const followUser =(userid)=>\n// //  {\n// //             fetch(`http://localhost:5000/follow`,{\n// //               method:\"put\",\n// //               headers: {\n// //                 \"Content-Type\":\"application/json\",\n// //                 \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n// //               },\n// //               body:JSON.stringify({\n// //                 followId:userid,\n\n// //               })\n// //             }).then((res)=>{res.json()})\n// //             .then((data)=>\n// //             {\n// //               console.log(data);\n// //             //  setData(data)\n// //             })\n// //  }\n\n// //  const UnfollowUser =(userid)=>\n// //  {\n// //             fetch(`http://localhost:5000/unfollow`,{\n// //               method:\"put\",\n// //               headers: {\n// //                 \"Content-Type\":\"application/json\",\n// //                 \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n// //               },\n// //               body:JSON.stringify({\n// //                 followId:userid,\n\n// //               })\n// //             }).then((res)=>{res.json()})\n// //             .then((data)=>\n// //             {\n// //               console.log(data);\n// //              setData(data)\n// //             })\n// //  }\n// //   useEffect(() => {\n// //     fetch(`http://localhost:5000/user/${userid}`, {\n// //       headers: {\n// //         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n// //       }\n// //     })\n// //       .then(res => res.json())\n// //       .then((result) => \n// //       { console.log(\"Results.......\")\n// //         console.log(result);\n// //         setUser(result.user)\n// //        setPosts(result.posts)\n// //       }).catch(err => console.log(err));\n// //   }, []);\n\n// //   return (\n// //     <div className=\"profile\">\n// //       <div className=\"profile-frame\">\n// //         <div className=\"profile-pic\">\n// //           <img src={profile} alt=\"profile\" />\n// //         </div>\n// //         <div className=\"profile-data\">\n// //           <div style={{display:\"flex\",alignItems:\"center\" }}>\n// //           <h1>{user.name}</h1>\n// //           <button className='followBtn' style={{ \n// //     // Your custom button styles here\n// //     padding: '10px 20px', // Example padding\n// //     borderRadius: '20px', // Example border radius\n// //     border: 'none', // Remove default border\n// //     backgroundColor: '#405DE6', // Instagram blue color\n// //     color: 'white', // Text color\n// //     boxShadow: '0 0 10px rgba(64, 93, 230, 0.5)', // Box shadow for glow effect\n// //     cursor: 'pointer', // Cursor style\n// //     transition: 'box-shadow 0.3s ease', // Smooth transition for glow effect\n// //   }} onClick={()=>{followUser(user._id)}}>Follow</button>\n// //           {/* <button className='followBtn'>Follow</button> */}\n// //           </div>\n// //           <div className=\"profile-info\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n// //             <p>{posts.length} posts</p>\n// //             <p>40 followers</p>\n// //             <p>40 following</p>\n// //           </div>\n// //         </div>\n// //       </div>\n// //       <hr style={{ width: \"90%\", margin: \"auto\", opacity: \"0.8\" }} />\n// //       <div className=\"gallery\">\n// //         {posts.map((pic) => (\n// //           <div key={pic._id} className=\"post\">\n// //             <img \n// //               src={pic.photo} \n// //               // onClick={() => toggledetails(pic)} \n// //               alt=\"post\" \n// //             />\n// //           </div>\n// //         ))}\n// //       </div>\n// //       {/* {show && <Postdetails item={posts} toggledetails={toggledetails}  onDelete={deletePostFromState}/>} */}\n// //     </div>\n// //   );\n// // }\n// import React, { useEffect, useState } from 'react';\n// import profile from '../img/profile.jpg';\n// import \"./Profile.css\";\n// import { useNavigate } from 'react-router-dom';\n// import Postdetails from './Postdetails';\n// import { useParams } from 'react-router-dom';\n\n// export default function UserProfile() {\n//   const [data, setData] = useState([]);\n//   const { userid } = useParams();\n//   const [user, setUser] = useState(\"\");\n//   const [posts, setPosts] = useState([]);\n//   const [following, setFollowing] = useState(false); // State to track if user is following\n//   const navigate = useNavigate();\n\n//   const notifyB = (message) => alert(message);\n\n//   const followUser = (userid) => {\n//     fetch(`http://localhost:5000/follow`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         followId: userid,\n//       })\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(data);\n//         setFollowing(true); // Update state to indicate following\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   const unfollowUser = (userid) => {\n//     fetch(`http://localhost:5000/unfollow`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         followId: userid,\n//       })\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         console.log(data);\n//         setFollowing(false); // Update state to indicate unfollowing\n//       })\n//       .catch((err) => console.log(err));\n//   };\n\n//   useEffect(() => {\n//     fetch(`http://localhost:5000/user/${userid}`, {\n//       headers: {\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       }\n//     })\n//       .then(res => res.json())\n//       .then((result) => {\n//         console.log(\"Results.......\")\n//         console.log(result);\n//         setUser(result.user);\n//         setPosts(result.posts);\n//         // Check if current user is following the profile user\n//         setFollowing(result.user.followers.includes(localStorage.getItem(\"userId\")));\n//       })\n//       .catch(err => console.log(err));\n//   }, []);\n\n//   return (\n//     <div className=\"profile\">\n//       <div className=\"profile-frame\">\n//         <div className=\"profile-pic\">\n//           <img src={profile} alt=\"profile\" />\n//         </div>\n//         <div className=\"profile-data\">\n//           <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//             <h1>{user.name}</h1>\n//             <button className='followBtn' style={{\n//               padding: '10px 20px',\n//               borderRadius: '20px',\n//               border: 'none',\n//               backgroundColor: following ? '#C13584' : '#405DE6', // Change color based on following status\n//               color: 'white',\n//               cursor: 'pointer',\n//               transition: 'box-shadow 0.3s ease',\n//             }} onClick={() => {\n//               if (following) {\n//                 unfollowUser(user._id);\n//               } else {\n//                 followUser(user._id);\n//               }\n//             }}>{following ? 'Following' : 'Follow'}</button>\n//           </div>\n//           <div className=\"profile-info\" style={{ display: 'flex', justifyContent: 'space-around' }}>\n//             <p>{posts.length} posts</p>\n//             <p>40 followers</p>\n//             <p>40 following</p>\n//           </div>\n//         </div>\n//       </div>\n//       <hr style={{ width: \"90%\", margin: \"auto\", opacity: \"0.8\" }} />\n//       <div className=\"gallery\">\n//         {posts.map((pic) => (\n//           <div key={pic._id} className=\"post\">\n//             <img\n//               src={pic.photo}\n//               alt=\"post\"\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from 'react';\nimport profile from '../img/profile.jpg';\nimport \"./Profile.css\";\nimport { useNavigate } from 'react-router-dom';\nimport Postdetails from './Postdetails';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    userid\n  } = useParams();\n  const [user, setUser] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [following, setFollowing] = useState(false); // State to track if user is following\n  const navigate = useNavigate();\n  const notifyB = message => alert(message);\n  const followUser = userid => {\n    fetch(`http://localhost:5000/follow`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        followId: userid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setFollowing(true); // Update state to indicate following\n      localStorage.setItem(\"following\", true); // Update local storage\n    }).catch(err => console.log(err));\n  };\n  const unfollowUser = userid => {\n    fetch(`http://localhost:5000/unfollow`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        followId: userid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setFollowing(false); // Update state to indicate unfollowing\n      localStorage.setItem(\"following\", false); // Update local storage\n    }).catch(err => console.log(err));\n  };\n  useEffect(() => {\n    fetch(`http://localhost:5000/user/${userid}`, {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(\"Results.......\");\n      console.log(result);\n      setUser(result.user);\n      setPosts(result.posts);\n      // Check if current user is following the profile user\n      const isFollowing = localStorage.getItem(\"following\") === \"true\";\n      setFollowing(isFollowing);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-pic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile,\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"followBtn\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '20px',\n              border: 'none',\n              backgroundColor: following ? '#C13584' : '#405DE6',\n              // Change color based on following status\n              color: 'white',\n              cursor: 'pointer',\n              transition: 'box-shadow 0.3s ease'\n            },\n            onClick: () => {\n              if (following) {\n                unfollowUser(user._id);\n              } else {\n                followUser(user._id);\n              }\n            },\n            children: following ? 'Following' : 'Follow'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [posts.length, \" posts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [user.followers ? user.followers.length : \"0\", \" followers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", user.following ? user.following.length : \"0\", \" following\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        width: \"90%\",\n        margin: \"auto\",\n        opacity: \"0.8\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: posts.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pic.photo,\n          alt: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, pic._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProfile, \"/kSx0umevex0qjDRD6aAUZXxq3s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","profile","useNavigate","Postdetails","useParams","jsxDEV","_jsxDEV","UserProfile","_s","data","setData","userid","user","setUser","posts","setPosts","following","setFollowing","navigate","notifyB","message","alert","followUser","fetch","method","headers","localStorage","getItem","body","JSON","stringify","followId","then","res","json","console","log","setItem","catch","err","unfollowUser","result","isFollowing","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","name","padding","borderRadius","border","backgroundColor","color","cursor","transition","onClick","_id","justifyContent","length","followers","width","margin","opacity","map","pic","photo","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/ha/frontend/src/components/UserProfile.js"],"sourcesContent":["\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import profile from '../img/profile.jpg';\r\n// // import \"./Profile.css\";\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import Postdetails from './Postdetails';\r\n// // import { useParams } from 'react-router-dom';\r\n// // export default function UserProfile() {\r\n// //   const [data, setData] = useState([]);\r\n// //   const {userid}=useParams();\r\n// //   const [user,setUser]=useState(\"\");\r\n// //   const [posts, setPosts] = useState([]);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const notifyB = (message) => alert(message);\r\n\r\n// //  const followUser =(userid)=>\r\n// //  {\r\n// //             fetch(`http://localhost:5000/follow`,{\r\n// //               method:\"put\",\r\n// //               headers: {\r\n// //                 \"Content-Type\":\"application/json\",\r\n// //                 \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n// //               },\r\n// //               body:JSON.stringify({\r\n// //                 followId:userid,\r\n\r\n// //               })\r\n// //             }).then((res)=>{res.json()})\r\n// //             .then((data)=>\r\n// //             {\r\n// //               console.log(data);\r\n// //             //  setData(data)\r\n// //             })\r\n// //  }\r\n\r\n\r\n// //  const UnfollowUser =(userid)=>\r\n// //  {\r\n// //             fetch(`http://localhost:5000/unfollow`,{\r\n// //               method:\"put\",\r\n// //               headers: {\r\n// //                 \"Content-Type\":\"application/json\",\r\n// //                 \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n// //               },\r\n// //               body:JSON.stringify({\r\n// //                 followId:userid,\r\n\r\n// //               })\r\n// //             }).then((res)=>{res.json()})\r\n// //             .then((data)=>\r\n// //             {\r\n// //               console.log(data);\r\n// //              setData(data)\r\n// //             })\r\n// //  }\r\n// //   useEffect(() => {\r\n// //     fetch(`http://localhost:5000/user/${userid}`, {\r\n// //       headers: {\r\n// //         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n// //       }\r\n// //     })\r\n// //       .then(res => res.json())\r\n// //       .then((result) => \r\n// //       { console.log(\"Results.......\")\r\n// //         console.log(result);\r\n// //         setUser(result.user)\r\n// //        setPosts(result.posts)\r\n// //       }).catch(err => console.log(err));\r\n// //   }, []);\r\n\r\n// //   return (\r\n// //     <div className=\"profile\">\r\n// //       <div className=\"profile-frame\">\r\n// //         <div className=\"profile-pic\">\r\n// //           <img src={profile} alt=\"profile\" />\r\n// //         </div>\r\n// //         <div className=\"profile-data\">\r\n// //           <div style={{display:\"flex\",alignItems:\"center\" }}>\r\n// //           <h1>{user.name}</h1>\r\n// //           <button className='followBtn' style={{ \r\n// //     // Your custom button styles here\r\n// //     padding: '10px 20px', // Example padding\r\n// //     borderRadius: '20px', // Example border radius\r\n// //     border: 'none', // Remove default border\r\n// //     backgroundColor: '#405DE6', // Instagram blue color\r\n// //     color: 'white', // Text color\r\n// //     boxShadow: '0 0 10px rgba(64, 93, 230, 0.5)', // Box shadow for glow effect\r\n// //     cursor: 'pointer', // Cursor style\r\n// //     transition: 'box-shadow 0.3s ease', // Smooth transition for glow effect\r\n// //   }} onClick={()=>{followUser(user._id)}}>Follow</button>\r\n// //           {/* <button className='followBtn'>Follow</button> */}\r\n// //           </div>\r\n// //           <div className=\"profile-info\" style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n// //             <p>{posts.length} posts</p>\r\n// //             <p>40 followers</p>\r\n// //             <p>40 following</p>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //       <hr style={{ width: \"90%\", margin: \"auto\", opacity: \"0.8\" }} />\r\n// //       <div className=\"gallery\">\r\n// //         {posts.map((pic) => (\r\n// //           <div key={pic._id} className=\"post\">\r\n// //             <img \r\n// //               src={pic.photo} \r\n// //               // onClick={() => toggledetails(pic)} \r\n// //               alt=\"post\" \r\n// //             />\r\n// //           </div>\r\n// //         ))}\r\n// //       </div>\r\n// //       {/* {show && <Postdetails item={posts} toggledetails={toggledetails}  onDelete={deletePostFromState}/>} */}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useEffect, useState } from 'react';\r\n// import profile from '../img/profile.jpg';\r\n// import \"./Profile.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Postdetails from './Postdetails';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// export default function UserProfile() {\r\n//   const [data, setData] = useState([]);\r\n//   const { userid } = useParams();\r\n//   const [user, setUser] = useState(\"\");\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [following, setFollowing] = useState(false); // State to track if user is following\r\n//   const navigate = useNavigate();\r\n\r\n//   const notifyB = (message) => alert(message);\r\n\r\n//   const followUser = (userid) => {\r\n//     fetch(`http://localhost:5000/follow`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         followId: userid,\r\n//       })\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         console.log(data);\r\n//         setFollowing(true); // Update state to indicate following\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   };\r\n\r\n//   const unfollowUser = (userid) => {\r\n//     fetch(`http://localhost:5000/unfollow`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         followId: userid,\r\n//       })\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         console.log(data);\r\n//         setFollowing(false); // Update state to indicate unfollowing\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:5000/user/${userid}`, {\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       }\r\n//     })\r\n//       .then(res => res.json())\r\n//       .then((result) => {\r\n//         console.log(\"Results.......\")\r\n//         console.log(result);\r\n//         setUser(result.user);\r\n//         setPosts(result.posts);\r\n//         // Check if current user is following the profile user\r\n//         setFollowing(result.user.followers.includes(localStorage.getItem(\"userId\")));\r\n//       })\r\n//       .catch(err => console.log(err));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"profile\">\r\n//       <div className=\"profile-frame\">\r\n//         <div className=\"profile-pic\">\r\n//           <img src={profile} alt=\"profile\" />\r\n//         </div>\r\n//         <div className=\"profile-data\">\r\n//           <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n//             <h1>{user.name}</h1>\r\n//             <button className='followBtn' style={{\r\n//               padding: '10px 20px',\r\n//               borderRadius: '20px',\r\n//               border: 'none',\r\n//               backgroundColor: following ? '#C13584' : '#405DE6', // Change color based on following status\r\n//               color: 'white',\r\n//               cursor: 'pointer',\r\n//               transition: 'box-shadow 0.3s ease',\r\n//             }} onClick={() => {\r\n//               if (following) {\r\n//                 unfollowUser(user._id);\r\n//               } else {\r\n//                 followUser(user._id);\r\n//               }\r\n//             }}>{following ? 'Following' : 'Follow'}</button>\r\n//           </div>\r\n//           <div className=\"profile-info\" style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n//             <p>{posts.length} posts</p>\r\n//             <p>40 followers</p>\r\n//             <p>40 following</p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <hr style={{ width: \"90%\", margin: \"auto\", opacity: \"0.8\" }} />\r\n//       <div className=\"gallery\">\r\n//         {posts.map((pic) => (\r\n//           <div key={pic._id} className=\"post\">\r\n//             <img\r\n//               src={pic.photo}\r\n//               alt=\"post\"\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useEffect, useState } from 'react';\r\nimport profile from '../img/profile.jpg';\r\nimport \"./Profile.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Postdetails from './Postdetails';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function UserProfile() {\r\n  const [data, setData] = useState([]);\r\n  const { userid } = useParams();\r\n  const [user, setUser] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [following, setFollowing] = useState(false); // State to track if user is following\r\n  const navigate = useNavigate();\r\n\r\n  const notifyB = (message) => alert(message);\r\n\r\n  const followUser = (userid) => {\r\n    fetch(`http://localhost:5000/follow`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFollowing(true); // Update state to indicate following\r\n        localStorage.setItem(\"following\", true); // Update local storage\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const unfollowUser = (userid) => {\r\n    fetch(`http://localhost:5000/unfollow`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n      })\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFollowing(false); // Update state to indicate unfollowing\r\n        localStorage.setItem(\"following\", false); // Update local storage\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/user/${userid}`, {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then((result) => {\r\n        console.log(\"Results.......\")\r\n        console.log(result);\r\n        setUser(result.user);\r\n        setPosts(result.posts);\r\n        // Check if current user is following the profile user\r\n        const isFollowing = localStorage.getItem(\"following\") === \"true\";\r\n        setFollowing(isFollowing);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-frame\">\r\n        <div className=\"profile-pic\">\r\n          <img src={profile} alt=\"profile\" />\r\n        </div>\r\n        <div className=\"profile-data\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <h1>{user.name}</h1>\r\n            <button className='followBtn' style={{\r\n              padding: '10px 20px',\r\n              borderRadius: '20px',\r\n              border: 'none',\r\n              backgroundColor: following ? '#C13584' : '#405DE6', // Change color based on following status\r\n              color: 'white',\r\n              cursor: 'pointer',\r\n              transition: 'box-shadow 0.3s ease',\r\n            }} onClick={() => {\r\n              if (following) {\r\n                unfollowUser(user._id);\r\n              } else {\r\n                followUser(user._id);\r\n              }\r\n            }}>{following ? 'Following' : 'Follow'}</button>\r\n          </div>\r\n          <div className=\"profile-info\" style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n            <p>{posts.length} posts</p>\r\n            <p>{user.followers ? user.followers.length : \"0\"} followers</p>\r\n            <p> {user.following ? user.following.length : \"0\"} following</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr style={{ width: \"90%\", margin: \"auto\", opacity: \"0.8\" }} />\r\n      <div className=\"gallery\">\r\n        {posts.map((pic) => (\r\n          <div key={pic._id} className=\"post\">\r\n            <img\r\n              src={pic.photo}\r\n              alt=\"post\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEW;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,OAAO,GAAIC,OAAO,IAAKC,KAAK,CAACD,OAAO,CAAC;EAE3C,MAAME,UAAU,GAAIX,MAAM,IAAK;IAC7BY,KAAK,CAAE,8BAA6B,EAAE;MACpCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK;MACzD,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEpB;MACZ,CAAC;IACH,CAAC,CAAC,CACCqB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEvB,IAAI,IAAK;MACd0B,OAAO,CAACC,GAAG,CAAC3B,IAAI,CAAC;MACjBQ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBS,YAAY,CAACW,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAI7B,MAAM,IAAK;IAC/BY,KAAK,CAAE,gCAA+B,EAAE;MACtCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK;MACzD,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAEpB;MACZ,CAAC;IACH,CAAC,CAAC,CACCqB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEvB,IAAI,IAAK;MACd0B,OAAO,CAACC,GAAG,CAAC3B,IAAI,CAAC;MACjBQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACrBS,YAAY,CAACW,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACdwB,KAAK,CAAE,8BAA6BZ,MAAO,EAAC,EAAE;MAC5Cc,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK;MACzD;IACF,CAAC,CAAC,CACCK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAES,MAAM,IAAK;MAChBN,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;MACnB5B,OAAO,CAAC4B,MAAM,CAAC7B,IAAI,CAAC;MACpBG,QAAQ,CAAC0B,MAAM,CAAC3B,KAAK,CAAC;MACtB;MACA,MAAM4B,WAAW,GAAGhB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,MAAM;MAChEV,YAAY,CAACyB,WAAW,CAAC;IAC3B,CAAC,CAAC,CACDJ,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA;IAAKqC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBtC,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BtC,OAAA;QAAKqC,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BtC,OAAA;UAAKuC,GAAG,EAAE5C,OAAQ;UAAC6C,GAAG,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACN5C,OAAA;QAAKqC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BtC,OAAA;UAAK6C,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAAT,QAAA,gBACpDtC,OAAA;YAAAsC,QAAA,EAAKhC,IAAI,CAAC0C;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB5C,OAAA;YAAQqC,SAAS,EAAC,WAAW;YAACQ,KAAK,EAAE;cACnCI,OAAO,EAAE,WAAW;cACpBC,YAAY,EAAE,MAAM;cACpBC,MAAM,EAAE,MAAM;cACdC,eAAe,EAAE1C,SAAS,GAAG,SAAS,GAAG,SAAS;cAAE;cACpD2C,KAAK,EAAE,OAAO;cACdC,MAAM,EAAE,SAAS;cACjBC,UAAU,EAAE;YACd,CAAE;YAACC,OAAO,EAAEA,CAAA,KAAM;cAChB,IAAI9C,SAAS,EAAE;gBACbwB,YAAY,CAAC5B,IAAI,CAACmD,GAAG,CAAC;cACxB,CAAC,MAAM;gBACLzC,UAAU,CAACV,IAAI,CAACmD,GAAG,CAAC;cACtB;YACF,CAAE;YAAAnB,QAAA,EAAE5B,SAAS,GAAG,WAAW,GAAG;UAAQ;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACN5C,OAAA;UAAKqC,SAAS,EAAC,cAAc;UAACQ,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEY,cAAc,EAAE;UAAe,CAAE;UAAApB,QAAA,gBACvFtC,OAAA;YAAAsC,QAAA,GAAI9B,KAAK,CAACmD,MAAM,EAAC,QAAM;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC3B5C,OAAA;YAAAsC,QAAA,GAAIhC,IAAI,CAACsD,SAAS,GAAGtD,IAAI,CAACsD,SAAS,CAACD,MAAM,GAAG,GAAG,EAAC,YAAU;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC/D5C,OAAA;YAAAsC,QAAA,GAAG,GAAC,EAAChC,IAAI,CAACI,SAAS,GAAGJ,IAAI,CAACI,SAAS,CAACiD,MAAM,GAAG,GAAG,EAAC,YAAU;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5C,OAAA;MAAI6C,KAAK,EAAE;QAAEgB,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAM;IAAE;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D5C,OAAA;MAAKqC,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrB9B,KAAK,CAACwD,GAAG,CAAEC,GAAG,iBACbjE,OAAA;QAAmBqC,SAAS,EAAC,MAAM;QAAAC,QAAA,eACjCtC,OAAA;UACEuC,GAAG,EAAE0B,GAAG,CAACC,KAAM;UACf1B,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC,GAJMqB,GAAG,CAACR,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1C,EAAA,CAlHuBD,WAAW;EAAA,QAEdH,SAAS,EAIXF,WAAW;AAAA;AAAAuE,EAAA,GANNlE,WAAW;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}