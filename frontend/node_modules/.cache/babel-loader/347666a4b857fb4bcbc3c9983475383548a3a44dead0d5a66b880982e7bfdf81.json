{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ha\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport profile from '../img/profile.jpg';\nimport './Home.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate('/SignUp');\n    } else {\n      fetch(\"http://localhost:5000/allposts\", {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(result => {\n        setData(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [navigate]);\n  const toggleLike = postId => {\n    const token = localStorage.getItem(\"jwt\");\n    if (!token) {\n      navigate('/SignUp');\n    } else {\n      const post = data.find(p => p._id === postId);\n      const isLiked = post.likes.includes(postId);\n      const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\n      const updatedData = data.map(post => {\n        if (post._id === postId) {\n          return {\n            ...post,\n            likes: updatedLikes\n          };\n        }\n        return post;\n      });\n      setData(updatedData);\n      const emojiElement = document.getElementById(`emoji-${postId}`);\n      emojiElement.style.color = isLiked ? 'black' : 'red'; // Change color based on like status\n\n      const endpoint = isLiked ? 'unlike' : 'like';\n      fetch(`http://localhost:5000/${endpoint}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token\n        },\n        body: JSON.stringify({\n          postId: postId\n        })\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok ' + res.statusText);\n        }\n        // Optionally, update the UI here\n      }).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n      });\n    }\n  };\n  const makeComment = (text, id) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        text: text,\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(posts => {\n        if (posts._id == result._id) {\n          return result;\n        } else {\n          return posts;\n        }\n      });\n      setData(newData);\n      setComment(\"\");\n      alert(\"comment posted\");\n      console.log(result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: post.postedBy ? post.postedBy.name : \"Unknown User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.photo,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `material-symbols-outlined ${post.likes.includes(post._id) ? 'liked' : ''}`,\n            onClick: () => toggleLike(post._id),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: `emoji-${post._id}`,\n              style: {\n                color: post.likes.includes(post._id) ? 'red' : 'black'\n              },\n              children: post.likes.includes(post._id) ? '❤️' : '🖤'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [post.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"bold\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              // Implement toggleComment function if needed\n              // toggleComment(post);  // Uncomment this if you have the function defined\n            },\n            children: \"View all comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment\",\n          value: comment,\n          onChange: e => {\n            setComment(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment\",\n          onClick: () => {\n            makeComment(comment, posts._id);\n          },\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"qOpFm6vvCz6vzxLgOHZFRZAPXyU=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","profile","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","data","setData","comment","setComment","show","setShow","item","setItem","token","localStorage","getItem","fetch","headers","then","res","json","result","catch","err","console","log","toggleLike","postId","post","find","p","_id","isLiked","likes","includes","updatedLikes","filter","id","updatedData","map","emojiElement","document","getElementById","style","color","endpoint","method","body","JSON","stringify","ok","Error","statusText","error","makeComment","text","Authorization","newData","posts","alert","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","postedBy","name","photo","onClick","length","fontWeight","cursor","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/ha/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport profile from '../img/profile.jpg';\r\nimport './Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate('/SignUp');\r\n    } else {\r\n      fetch(\"http://localhost:5000/allposts\", {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        },\r\n      })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setData(result);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const toggleLike = (postId) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate('/SignUp');\r\n    } else {\r\n      const post = data.find(p => p._id === postId);\r\n      const isLiked = post.likes.includes(postId);\r\n      const updatedLikes = isLiked ? post.likes.filter(id => id !== postId) : [...post.likes, postId];\r\n\r\n      const updatedData = data.map(post => {\r\n        if (post._id === postId) {\r\n          return { ...post, likes: updatedLikes };\r\n        }\r\n        return post;\r\n      });\r\n      setData(updatedData);\r\n\r\n      const emojiElement = document.getElementById(`emoji-${postId}`);\r\n      emojiElement.style.color = isLiked ? 'black' : 'red'; // Change color based on like status\r\n\r\n      const endpoint = isLiked ? 'unlike' : 'like';\r\n      fetch(`http://localhost:5000/${endpoint}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer \" + token\r\n        },\r\n        body: JSON.stringify({\r\n          postId: postId\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error('Network response was not ok ' + res.statusText);\r\n        }\r\n        // Optionally, update the UI here\r\n      })\r\n      .catch(error => {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      });\r\n    }\r\n  };\r\n  const makeComment = (text, id) => {\r\n    fetch(\"http://localhost:5000/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        setComment(\"\");\r\n       alert(\"comment posted\");\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"home\">\r\n      {data.map(post => (\r\n        <div className=\"card\" key={post._id}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-pic\">\r\n              <img src={profile} alt=\"Profile\" />\r\n            </div>\r\n            <h5>{post.postedBy ? post.postedBy.name : \"Unknown User\"}</h5>\r\n          </div>\r\n          <div className=\"card-image\">\r\n            <img src={post.photo} alt=\"Post\" />\r\n            <div className=\"card-content\">\r\n              <span\r\n                className={`material-symbols-outlined ${post.likes.includes(post._id) ? 'liked' : ''}`}\r\n                onClick={() => toggleLike(post._id)}\r\n              >\r\n                <span id={`emoji-${post._id}`} style={{ color: post.likes.includes(post._id) ? 'red' : 'black' }}>\r\n                  {post.likes.includes(post._id) ? '❤️' : '🖤'}\r\n                </span>\r\n              </span>\r\n              <p>{post.likes.length} likes</p>\r\n              <p>{post.body}</p>\r\n              <p\r\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  // Implement toggleComment function if needed\r\n                  // toggleComment(post);  // Uncomment this if you have the function defined\r\n                }}\r\n              >\r\n                View all comments\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"add-comment\">\r\n            <span className=\"material-symbols-outlined\">mood</span>\r\n            <input type=\"text\" placeholder='Add a comment'  value={comment}\r\n                onChange={(e) => {\r\n                  setComment(e.target.value);\r\n                }}/>\r\n            <button className=\"comment\" onClick={() => {\r\n                  makeComment(comment, posts._id);\r\n                }}>Post</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}